// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package frc.robot.commands;
import edu.wpi.first.wpilibj.command.Command;
import frc.robot.Robot;

/**
 *
 */
public class AutoPresetsRotateHood extends Command {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
 
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
    private double m_Distance;
    private double m_Speed;
    private double startingPosition;

    public AutoPresetsRotateHood(double Distance, double Speed) {


        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        m_Distance = Distance;
        m_Speed = Speed;
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.manualturrethood);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    @Override
    protected void initialize() {
        startingPosition = Robot.manualturrethood.getEncoder();
    }

    // Called repeatedly when this Command is scheduled to run
    @Override
    protected void execute() {
        if (m_Distance < startingPosition) {   
            Robot.manualturrethood.setSpeed(-m_Speed);
        } else {
            Robot.manualturrethood.setSpeed(m_Speed);
        }
    }

    // Make this return true when this Command no longer needs to run execute()
    @Override
    protected boolean isFinished() {
         if(m_Distance < startingPosition) { //go down
            if (Robot.manualturrethood.getEncoder() < m_Distance) {     
                return true;
            } else {
                return false;
            }
        } else { // go up
            if (Robot.manualturrethood.getEncoder() >  m_Distance) { // going backward  
                return true;
            } else {
                return false;
            }   
        }
    }

    // Called once after isFinished returns true
    @Override
    protected void end() {
        Robot.manualturrethood.setSpeed(0);
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    @Override
    protected void interrupted() {
        end();
    }
}
